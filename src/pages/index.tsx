import Head from 'next/head'
import styles from '@component/styles/Home.module.css'
import { useUser } from '@auth0/nextjs-auth0/client'
import { withPageAuthRequired } from '@auth0/nextjs-auth0'
import { AppBar, Avatar, Box, Button, Container, Grid, IconButton, Link, ListItemIcon, Menu, MenuItem, Paper, styled, Toolbar, Tooltip, Typography } from '@mui/material';
import { useState } from 'react';
import { Logout, Person, Settings } from '@mui/icons-material';

const Item = styled(Paper)(() => ({
  textAlign: 'center',
  height: 60,
  lineHeight: '60px',
}));

export default function Home() {
  const { user, error, isLoading } = useUser();

  if (isLoading) return <>...Loading</>
  if (error) return <>Error!</>
  if (user) {

    const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);

    const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {
      setAnchorElUser(event.currentTarget);
    };

    const handleCloseUserMenu = () => {
      setAnchorElUser(null);
    };

    return (
      <Container maxWidth="lg">
        <Head>
          <title>Travel Bud</title>
          <link rel="icon" href="" />
        </Head>
        <Box sx={{ flexGrow: 1 }}>
          <AppBar position="static">
            <Toolbar>
              <Typography sx={{ flexGrow: 1, fontWeight: 'bold' }} variant="h5">travelbud</Typography>
              <Tooltip title="Open settings">
                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
                  <Avatar >N</Avatar>
                </IconButton>
              </Tooltip>
              <Menu
                sx={{ mt: '45px' }}
                id="menu-appbar"
                anchorEl={anchorElUser}
                anchorOrigin={{
                  vertical: 'top',
                  horizontal: 'right',
                }}
                keepMounted
                transformOrigin={{
                  vertical: 'top',
                  horizontal: 'right',
                }}
                open={Boolean(anchorElUser)}
                onClose={handleCloseUserMenu}
              >
                <MenuItem key="Profile">
                  <ListItemIcon>
                    <Person fontSize="small" />
                  </ListItemIcon>
                  <Typography textAlign="center">Profile</Typography>
                </MenuItem>
                <MenuItem key="Settings">
                  <ListItemIcon>
                    <Settings fontSize="small" />
                  </ListItemIcon>
                  <Typography textAlign="center">Settings</Typography>
                </MenuItem>
                <Link href='/api/auth/logout' color="inherit" underline="none">
                  <MenuItem>
                    <ListItemIcon>
                      <Logout fontSize="small" />
                    </ListItemIcon>
                    <Typography textAlign="center">Logout</Typography>
                  </MenuItem>
                </Link>
              </Menu>
            </Toolbar>
          </AppBar>
        </Box>
        <Head>
          <title>Travel Bud</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <Typography variant="h4" sx={{ fontWeight: 'bold' }}>Your itineraries</Typography>
          <Grid
            container
            spacing={2}
            direction="column">
            <Grid item xs={6} >
              <Box
                sx={{
                  p: 2,
                  display: 'grid',
                  gridTemplateColumns: { md: '1fr 1fr' },
                  gap: 2,
                }}
              >
                <Item elevation={3}>
                  Itinerary 1
                </Item>
                <Item elevation={3}>
                  Itinerary 2
                </Item>
              </Box>
            </Grid>
          </Grid>
          <Button variant="contained" href="/createItinerary">Plan New Itinerary</Button>
        </main>
      </Container>
    )
  }
}

export const getServerSideProps = withPageAuthRequired();